{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","onSubmit","event","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","form","control","htmlFor","minLength","ref","type","id","action","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","url","enteredEmail","enteredPassword","email","ok","json","data","console","log","Error","expiresIn","toISOString","catch","err","alert","message","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,OAAS,8B,mBCAnGD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,+B,mBCAjED,EAAOC,QAAU,CAAC,QAAU,+B,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,wC,gECCzBC,E,sEAEEC,EAAcC,IAAMC,cAAc,CACtCC,MAAO,GACPC,YAAY,EACZC,MAAO,SAACF,KACRG,OAAQ,eAGJC,EAAyB,SAACC,GAC9B,IAAMC,GAAc,IAAIC,MAAOC,UAK/B,OAJ0B,IAAID,KAAKF,GAAgBG,UAETF,GAuB/BG,EAAsB,SAACC,GAClC,IACIC,EADEC,EAnBoB,WAC1B,IAAMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAuBF,aAAaC,QAAQ,kBAE5CE,EAAgBb,EAAuBY,GAE7C,OAAIC,GAAiB,KACnBH,aAAaI,WAAW,SACxBJ,aAAaI,WAAW,kBACjB,MAGF,CACLlB,MAAOa,EACPM,SAAUF,GAKMG,GAEdR,IACFD,EAAeC,EAAUZ,OAE3B,MAA0BqB,mBAASV,GAAnC,mBAAOX,EAAP,KAAcsB,EAAd,KAEMC,IAAmBvB,EAEnBwB,EAAgBC,uBAAY,WAChCH,EAAS,MACTR,aAAaI,WAAWlB,GACxBc,aAAaI,WAAW,kBAEpBtB,GACF8B,aAAa9B,KAEd,IAYH+B,qBAAU,WACJf,IACFhB,EAAcgC,WAAWJ,EAAeZ,EAAUO,aAEnD,CAACP,EAAWY,IAEf,IAAMK,EAAe,CACnB7B,MAAOA,EACPC,WAAYsB,EACZrB,MAnBmB,SAACF,EAAOK,GAC3BiB,EAAStB,GACTc,aAAagB,QAAQ,QAAS9B,GAC9Bc,aAAagB,QAAQ,iBAAkBzB,GAEvC,IAAMY,EAAgBb,EAAuBC,GAE7CT,EAAcgC,WAAWJ,EAAeP,IAaxCd,OAAQqB,GAGV,OACE,cAAC3B,EAAYkC,SAAb,CAAsBC,MAAOH,EAA7B,SACGnB,EAAMuB,YAKEpC,I,iBC9CAqC,EArCQ,WACrB,IAAMC,EAAUC,qBAAWvC,GAErBI,EAAakC,EAAQlC,WAM3B,OACE,yBAAQoC,UAAWC,IAAQC,OAA3B,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKH,UAAWC,IAAQG,KAAxB,0BAEF,8BACE,gCACIxC,GACA,6BACE,cAAC,IAAD,CAAMuC,GAAG,QAAT,iCAGHvC,GACC,6BACE,cAAC,IAAD,CAAMuC,GAAG,WAAT,sBAGHvC,GACC,6BACE,wBAAQyC,QAvBE,WACpBP,EAAQhC,UAsBE,yCCpBCwC,EATA,SAACjC,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMuB,e,iBCyCJW,EA5CK,WAClB,IAAMC,EAAUC,cACVX,EAAUC,qBAAWvC,GAErBkD,EAAsBC,mBAyB5B,OACE,uBAAMC,SAxBc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAqBL,EAAoBM,QAAQrB,MAEvDsB,MACE,wGACA,CACEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,QAASxB,EAAQnC,MACjB4D,SAAUR,EACVS,mBAAmB,IAErBC,QAAS,CACP,eAAgB,sBAGpBC,MAAK,SAACC,GACNnB,EAAQoB,QAAQ,SAKa5B,UAAWC,IAAQ4B,KAAlD,UACE,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,eAAeC,UAAU,IAAxC,iCAGA,uBAAOC,IAAKvB,EAAqBwB,KAAK,WAAWC,GAAG,oBAEtD,qBAAKnC,UAAWC,IAAQmC,OAAxB,SACE,iE,iBC/BOC,EATK,WAClB,OACE,0BAASrC,UAAWC,IAAQqC,QAA5B,UACE,2CACA,cAAC,EAAD,Q,gBCoGSC,EAtGE,WACf,IAAM/B,EAAUC,cACV+B,EAAgB7B,mBAChB8B,EAAmB9B,mBAEnBb,EAAUC,qBAAWvC,GAE3B,EAA8BwB,oBAAS,GAAvC,mBAAO0D,EAAP,KAAgBC,EAAhB,KACA,EAAkC3D,oBAAS,GAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KA2DA,OACE,0BAAS7C,UAAWC,IAAQ6C,KAA5B,UACE,6BAAKJ,EAAU,oBAAmB,gBAClC,uBAAM9B,SAxDY,SAACC,GACrBA,EAAMC,iBAEN,IAIIiC,EAJEC,EAAeR,EAAcxB,QAAQrB,MACrCsD,EAAkBR,EAAiBzB,QAAQrB,MAEjDkD,GAAa,GAGXE,EADEL,EAEA,oHAGA,wGAEJzB,MAAM8B,EAAK,CACT7B,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnB6B,MAAOF,EACPzB,SAAU0B,EACVzB,mBAAmB,IAErBC,QAAS,CACP,eAAgB,sBAGjBC,MAAK,SAACC,GAEL,OADAkB,GAAa,GACTlB,EAAIwB,GACCxB,EAAIyB,OAEJzB,EAAIyB,OAAO1B,MAAK,SAAC2B,GAMtB,MAJAC,QAAQC,IAAIF,GAIN,IAAIG,MALS,+BASxB9B,MAAK,SAAC2B,GACL,IAAMrF,EAAiB,IAAIE,MACzB,IAAIA,MAAOC,UAA8B,KAAjBkF,EAAKI,WAE/B3D,EAAQjC,MAAMwF,EAAK/B,QAAStD,EAAe0F,eAC3ClD,EAAQoB,QAAQ,QAEjB+B,OAAM,SAACC,GACNC,MAAMD,EAAIE,aAOZ,UACE,sBAAK9D,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOE,IAAKO,EAAeN,KAAK,QAAQC,GAAG,QAAQ4B,UAAQ,OAE7D,sBAAK/D,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,WAAf,2BACA,uBACEE,IAAKQ,EACLP,KAAK,WACLC,GAAG,WACH4B,UAAQ,OAGZ,sBAAK/D,UAAWC,IAAQ+D,QAAxB,WACIpB,GACA,iCAASF,EAAU,oBAAmB,iBAEvCE,GAAa,qDACd,wBACEV,KAAK,SACLlC,UAAWC,IAAQgE,OACnB5D,QAlFoB,WAC5BsC,GAAW,SAACuB,GAAD,OAAgBA,MA8ErB,SAKGxB,EAAU,yBAA2B,qDC7FnCyB,EAJE,WACf,OAAO,cAAC,EAAD,K,iBCOMC,EARa,WAC1B,OACE,yBAASpE,UAAWC,IAAQoE,SAA5B,SACE,gDCCSC,EAJE,WACf,OAAO,cAAC,EAAD,KC+BMC,MA1Bf,WACE,IAAMzE,EAAUC,qBAAWvC,GAE3B,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgH,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,OAEA3E,EAAQlC,YACR,cAAC,IAAD,CAAO4G,KAAK,QAAZ,SACE,cAAC,EAAD,MAGJ,eAAC,IAAD,CAAOA,KAAK,WAAZ,UACG1E,EAAQlC,YAAc,cAAC,EAAD,KACrBkC,EAAQlC,YAAc,cAAC,IAAD,CAAUuC,GAAG,aAEvC,cAAC,IAAD,CAAOqE,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUrE,GAAG,cCpBvBuE,IAASC,OACP,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,kBCZ1BxH,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,4B","file":"static/js/main.55af0186.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__H63QX\",\"control\":\"ProfileForm_control__2u1jg\",\"action\":\"ProfileForm_action__3EwhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__14gyB\",\"logo\":\"MainNavigation_logo__1tXjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1nNy-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3Fiht\"};","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingTime = adjExpirationTime - currentTime;\r\n\r\n  return remainingTime;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(token);\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { Link } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useContext } from \"react\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Iniciar Sesión</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Perfil</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Cerrar sesión</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import AuthContext from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRef, useContext } from \"react\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n\n  const newPasswordInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyA0934RostgXxiQmLaM5gFHBJvPk0IDhwI\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      history.replace('/');\n    });\n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\" minLength=\"7\">\n          Nueva contraseña\n        </label>\n        <input ref={newPasswordInputRef} type=\"password\" id=\"new-password\" />\n      </div>\n      <div className={classes.action}>\n        <button>Cambiar contraseña</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Tu perfil</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import AuthContext from \"../../store/auth-context\";\nimport { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA0934RostgXxiQmLaM5gFHBJvPk0IDhwI\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA0934RostgXxiQmLaM5gFHBJvPk0IDhwI\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed\";\n            console.log(data);\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Iniciar Sesión\" : \"Registrarse\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Email</label>\n          <input ref={emailInputRef} type=\"email\" id=\"email\" required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Contraseña</label>\n          <input\n            ref={passwordInputRef}\n            type=\"password\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Iniciar Sesión\" : \"Crear Cuenta\"}</button>\n          )}\n          {isLoading && <p>Enviando solicitud..</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Crear una nueva cuenta\" : \"Iniciar sesión con cuenta existente\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Bienvenido!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/profile\">\n          {authCtx.isLoggedIn && <UserProfile />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__fFGjk\",\"control\":\"AuthForm_control__2OZ-o\",\"actions\":\"AuthForm_actions__3mXeX\",\"toggle\":\"AuthForm_toggle__1LhHj\"};"],"sourceRoot":""}